---
- name: Task
  hosts: servers
  vars_files:
    - ../vars.yaml
  tasks:
    - name: Print the hostname
      debug:
        msg: "host: {{ inventory_hostname }}"

    # - name: Remove old Docker versions
    #   become: yes
    #   apt:
    #     name: 
    #       - docker
    #       - docker-engine
    #       - docker.io
    #       - containerd
    #       - runc
    #     state: absent
    #     force: yes

    # - name: Update apt packages
    #   become: yes
    #   apt:
    #     update_cache: yes

    # - name: Install dependencies
    #   become: yes
    #   apt:
    #     name: 
    #       - ca-certificates
    #       - curl
    #       - gnupg
    #       - lsb-release
    #     state: present

    # - name: Create directory for apt keyrings
    #   become: yes
    #   file:
    #     path: /etc/apt/keyrings
    #     state: directory
    #     mode: '0755'

    # - name: Add Docker GPG key
    #   become: yes
    #   apt_key:
    #     url: https://download.docker.com/linux/debian/gpg
    #     state: present

    # - name: Add Docker repository
    #   become: yes
    #   apt_repository:
    #     repo: 'deb [arch=amd64] https://download.docker.com/linux/debian buster stable'
    #     state: present
    #     filename: docker

    # - name: Update apt packages again
    #   become: yes
    #   apt:
    #     update_cache: yes

    # - name: Install Docker packages
    #   become: yes
    #   apt:
    #     name:
    #       - docker-ce
    #       - docker-ce-cli
    #       - containerd.io
    #       - docker-buildx-plugin
    #       - docker-compose-plugin
    #     state: present

    # - name: Create Docker group
    #   become: yes
    #   group:
    #     name: docker
    #     state: present

    # - name: Add user to Docker group
    #   become: yes
    #   user:
    #     name: "{{ ansible_user_id }}"
    #     groups: docker
    #     append: yes

    # - name: Refresh group membership
    #   command: newgrp docker
    #   become_user: "{{ ansible_user_id }}"

    # - name: Run Docker hello-world
    #   command: docker run hello-world
    #   register: docker_output

    # - name: Debug Docker hello-world output
    #   debug:
    #     var: docker_output.stdout

    - name: Check machine architecture
      command: uname -m
      register: machine_arch

    - name: Download kind for AMD64 / x86_64
      when: machine_arch.stdout == "x86_64"
      become: yes
      get_url:
        url: https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
        dest: /usr/local/bin/kind
        mode: '0755'

    - name: Download kind for ARM64
      when: machine_arch.stdout == "aarch64"
      become: yes
      get_url:
        url: https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-arm64
        dest: /usr/local/bin/kind
        mode: '0755'

    - name: Ensure kind is executable
      become: yes
      file:
        path: /usr/local/bin/kind
        mode: '0755'
        state: file