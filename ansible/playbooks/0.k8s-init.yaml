---
- name: Setup k3s, kubectl, and Helm
  hosts: servers
  vars_files:
    - ../vars.yaml
  tasks:
    - name: Print the hostname
      debug:
        msg: "host: {{ inventory_hostname }}"

    - name: Install k3s
      become: yes
      shell: curl -sfL https://get.k3s.io | sh -

    - name: Wait for k3s node to be ready
      become: yes
      retries: 10
      delay: 10
      command: sudo k3s kubectl get node
      register: k3s_node_check
      until: k3s_node_check.stdout.find('Ready') != -1

    - name: Create .kube directory for the user
      file:
        path: /home/{{ ansible_user_id }}/.kube
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0700'

    - name: Copy k3s kubeconfig to user's kube config
      become: yes
      shell: |
        cp /etc/rancher/k3s/k3s.yaml /home/{{ ansible_user_id }}/.kube/config
        chown {{ ansible_user_id }}:{{ ansible_user_id }} /home/{{ ansible_user_id }}/.kube/config

    - name: Get the latest kubectl version
      uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: yes
      register: kubectl_version

    - name: Download kubectl
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.content }}/bin/linux/amd64/kubectl"
        dest: /tmp/kubectl
        mode: '0755'

    - name: Install kubectl
      become: yes
      command: install -o root -g root -m 0755 /tmp/kubectl /usr/local/bin/kubectl

    - name: Download Helm installation script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0700'

    - name: Run Helm installation script
      command: /tmp/get_helm.sh
      args:
        creates: /usr/local/bin/helm

    - name: Verify k8s installation
      command: kubectl version --client
      register: kubectl_version

    - name: Print kubectl version
      debug:
        msg: "kubectl version: {{ kubectl_version.stdout }}"